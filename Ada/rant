# having to define a new type for 64-bit unsigned integers is terrible
# even worse is having to define a new package for I/O
# like why can't I just use Ada.Text_IO.Modular_IO directly instead of instantiating it?
# `use Ada.Text_IO.Modular_IO(u64, a);` doesn't work because Ada is a terrible language.
# furthermore, why can't it just be inferred from the type being a modular number?
# `Put_Line(a);` (or the equivalent) would work in any other language with integers.
# Haskell prints the number because why wouldn't it?
# OCaml prints the number because why wouldn't it?
# Pascal prints the number because why wouldn't it?
# Ada requires you to define a new package for I/O **as a generic**, so why even bother instantiating it?
# Ada requires you to use the package, **so why even bother instantiating it?**
# Like just make it a function in the standard library, Ada. It's not that hard.
# Ada genuinely has the worst I/O system of any language I've ever used tacked onto Pascal syntax like a tumour.
# C# is only worse because it's not portable in the slightest and barely works on Linux without eldrich incantations.
# C# is only worse because it's a Microsoft product and Microsoft is a cancer on the software industry.
# So what is Ada's excuse?
